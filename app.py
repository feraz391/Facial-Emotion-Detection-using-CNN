# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pjDvF4ixToQt_liXx9hDyJkf9BkXUpB2
"""



import streamlit as st
import numpy as np
import cv2
from PIL import Image
from tensorflow.keras.models import load_model

# Load model
model = load_model("D:\ML PROJECTS\emotion-detection-app\emotion_model_clahe_augmented.h5")
emotion_labels = ['Angry', 'Disgust', 'Fear', 'Happy', 'Sad', 'Surprise', 'Neutral']

# CLAHE preprocessing
def apply_clahe(image):
    gray = np.array(image.convert('L'))
    clahe = cv2.createCLAHE(clipLimit=2.0, tileGridSize=(8,8))
    clahe_img = clahe.apply(gray)
    return clahe_img

# Streamlit app
st.title("Emotion Detection from Facial Image")
st.write("Upload a face image to detect emotion")

uploaded_file = st.file_uploader("Choose an image...", type=["jpg", "jpeg", "png"])

if uploaded_file is not None:
    image = Image.open(uploaded_file)
    st.image(image, caption="Uploaded Image", use_column_width=True)

    # CLAHE-enhanced
    clahe_img = apply_clahe(image)
    st.image(clahe_img, caption="CLAHE Enhanced", use_column_width=True, channels="GRAY")

    # Preprocess
    img = cv2.resize(clahe_img, (48, 48))
    img = img.astype("float32") / 255.0
    img = np.expand_dims(img, axis=(0, -1))  # Shape: (1, 48, 48, 1)

    # Predict
    prediction = model.predict(img)
    predicted_label = emotion_labels[np.argmax(prediction)]
    st.subheader(f"Predicted Emotion: {predicted_label}")